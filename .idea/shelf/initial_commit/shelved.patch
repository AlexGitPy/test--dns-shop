Index: .idea/.gitignore
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- .idea/.gitignore	(date 1601290566765)
+++ .idea/.gitignore	(date 1601290566765)
@@ -0,0 +1,3 @@
+# Default ignored files
+/shelf/
+/workspace.xml
Index: .idea/jarRepositories.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- .idea/jarRepositories.xml	(date 1601290582801)
+++ .idea/jarRepositories.xml	(date 1601290582801)
@@ -0,0 +1,20 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<project version="4">
+  <component name="RemoteRepositoriesConfiguration">
+    <remote-repository>
+      <option name="id" value="central" />
+      <option name="name" value="Central Repository" />
+      <option name="url" value="https://repo.maven.apache.org/maven2" />
+    </remote-repository>
+    <remote-repository>
+      <option name="id" value="central" />
+      <option name="name" value="Maven Central repository" />
+      <option name="url" value="https://repo1.maven.org/maven2" />
+    </remote-repository>
+    <remote-repository>
+      <option name="id" value="jboss.community" />
+      <option name="name" value="JBoss Community repository" />
+      <option name="url" value="https://repository.jboss.org/nexus/content/repositories/public/" />
+    </remote-repository>
+  </component>
+</project>
\ No newline at end of file
Index: .idea/vcs.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- .idea/vcs.xml	(date 1601376453991)
+++ .idea/vcs.xml	(date 1601376453991)
@@ -0,0 +1,6 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<project version="4">
+  <component name="VcsDirectoryMappings">
+    <mapping directory="$PROJECT_DIR$" vcs="Git" />
+  </component>
+</project>
\ No newline at end of file
Index: .idea/misc.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- .idea/misc.xml	(date 1601291759178)
+++ .idea/misc.xml	(date 1601291759178)
@@ -0,0 +1,14 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<project version="4">
+  <component name="ExternalStorageConfigurationManager" enabled="true" />
+  <component name="MavenProjectsManager">
+    <option name="originalFiles">
+      <list>
+        <option value="$PROJECT_DIR$/pom.xml" />
+      </list>
+    </option>
+  </component>
+  <component name="ProjectRootManager" version="2" languageLevel="JDK_15_PREVIEW" default="false" project-jdk-name="15" project-jdk-type="JavaSDK">
+    <output url="file://$PROJECT_DIR$/out" />
+  </component>
+</project>
\ No newline at end of file
Index: .idea/compiler.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- .idea/compiler.xml	(date 1601455102763)
+++ .idea/compiler.xml	(date 1601455102763)
@@ -0,0 +1,13 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<project version="4">
+  <component name="CompilerConfiguration">
+    <annotationProcessing>
+      <profile name="Maven default annotation processors profile" enabled="true">
+        <sourceOutputDir name="target/generated-sources/annotations" />
+        <sourceTestOutputDir name="target/generated-test-sources/test-annotations" />
+        <outputRelativeToContentRoot value="true" />
+        <module name="dns-shop" />
+      </profile>
+    </annotationProcessing>
+  </component>
+</project>
\ No newline at end of file
Index: .idea/uiDesigner.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- .idea/uiDesigner.xml	(date 1601307147853)
+++ .idea/uiDesigner.xml	(date 1601307147853)
@@ -0,0 +1,124 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<project version="4">
+  <component name="Palette2">
+    <group name="Swing">
+      <item class="com.intellij.uiDesigner.HSpacer" tooltip-text="Horizontal Spacer" icon="/com/intellij/uiDesigner/icons/hspacer.png" removable="false" auto-create-binding="false" can-attach-label="false">
+        <default-constraints vsize-policy="1" hsize-policy="6" anchor="0" fill="1" />
+      </item>
+      <item class="com.intellij.uiDesigner.VSpacer" tooltip-text="Vertical Spacer" icon="/com/intellij/uiDesigner/icons/vspacer.png" removable="false" auto-create-binding="false" can-attach-label="false">
+        <default-constraints vsize-policy="6" hsize-policy="1" anchor="0" fill="2" />
+      </item>
+      <item class="javax.swing.JPanel" icon="/com/intellij/uiDesigner/icons/panel.png" removable="false" auto-create-binding="false" can-attach-label="false">
+        <default-constraints vsize-policy="3" hsize-policy="3" anchor="0" fill="3" />
+      </item>
+      <item class="javax.swing.JScrollPane" icon="/com/intellij/uiDesigner/icons/scrollPane.png" removable="false" auto-create-binding="false" can-attach-label="true">
+        <default-constraints vsize-policy="7" hsize-policy="7" anchor="0" fill="3" />
+      </item>
+      <item class="javax.swing.JButton" icon="/com/intellij/uiDesigner/icons/button.png" removable="false" auto-create-binding="true" can-attach-label="false">
+        <default-constraints vsize-policy="0" hsize-policy="3" anchor="0" fill="1" />
+        <initial-values>
+          <property name="text" value="Button" />
+        </initial-values>
+      </item>
+      <item class="javax.swing.JRadioButton" icon="/com/intellij/uiDesigner/icons/radioButton.png" removable="false" auto-create-binding="true" can-attach-label="false">
+        <default-constraints vsize-policy="0" hsize-policy="3" anchor="8" fill="0" />
+        <initial-values>
+          <property name="text" value="RadioButton" />
+        </initial-values>
+      </item>
+      <item class="javax.swing.JCheckBox" icon="/com/intellij/uiDesigner/icons/checkBox.png" removable="false" auto-create-binding="true" can-attach-label="false">
+        <default-constraints vsize-policy="0" hsize-policy="3" anchor="8" fill="0" />
+        <initial-values>
+          <property name="text" value="CheckBox" />
+        </initial-values>
+      </item>
+      <item class="javax.swing.JLabel" icon="/com/intellij/uiDesigner/icons/label.png" removable="false" auto-create-binding="false" can-attach-label="false">
+        <default-constraints vsize-policy="0" hsize-policy="0" anchor="8" fill="0" />
+        <initial-values>
+          <property name="text" value="Label" />
+        </initial-values>
+      </item>
+      <item class="javax.swing.JTextField" icon="/com/intellij/uiDesigner/icons/textField.png" removable="false" auto-create-binding="true" can-attach-label="true">
+        <default-constraints vsize-policy="0" hsize-policy="6" anchor="8" fill="1">
+          <preferred-size width="150" height="-1" />
+        </default-constraints>
+      </item>
+      <item class="javax.swing.JPasswordField" icon="/com/intellij/uiDesigner/icons/passwordField.png" removable="false" auto-create-binding="true" can-attach-label="true">
+        <default-constraints vsize-policy="0" hsize-policy="6" anchor="8" fill="1">
+          <preferred-size width="150" height="-1" />
+        </default-constraints>
+      </item>
+      <item class="javax.swing.JFormattedTextField" icon="/com/intellij/uiDesigner/icons/formattedTextField.png" removable="false" auto-create-binding="true" can-attach-label="true">
+        <default-constraints vsize-policy="0" hsize-policy="6" anchor="8" fill="1">
+          <preferred-size width="150" height="-1" />
+        </default-constraints>
+      </item>
+      <item class="javax.swing.JTextArea" icon="/com/intellij/uiDesigner/icons/textArea.png" removable="false" auto-create-binding="true" can-attach-label="true">
+        <default-constraints vsize-policy="6" hsize-policy="6" anchor="0" fill="3">
+          <preferred-size width="150" height="50" />
+        </default-constraints>
+      </item>
+      <item class="javax.swing.JTextPane" icon="/com/intellij/uiDesigner/icons/textPane.png" removable="false" auto-create-binding="true" can-attach-label="true">
+        <default-constraints vsize-policy="6" hsize-policy="6" anchor="0" fill="3">
+          <preferred-size width="150" height="50" />
+        </default-constraints>
+      </item>
+      <item class="javax.swing.JEditorPane" icon="/com/intellij/uiDesigner/icons/editorPane.png" removable="false" auto-create-binding="true" can-attach-label="true">
+        <default-constraints vsize-policy="6" hsize-policy="6" anchor="0" fill="3">
+          <preferred-size width="150" height="50" />
+        </default-constraints>
+      </item>
+      <item class="javax.swing.JComboBox" icon="/com/intellij/uiDesigner/icons/comboBox.png" removable="false" auto-create-binding="true" can-attach-label="true">
+        <default-constraints vsize-policy="0" hsize-policy="2" anchor="8" fill="1" />
+      </item>
+      <item class="javax.swing.JTable" icon="/com/intellij/uiDesigner/icons/table.png" removable="false" auto-create-binding="true" can-attach-label="false">
+        <default-constraints vsize-policy="6" hsize-policy="6" anchor="0" fill="3">
+          <preferred-size width="150" height="50" />
+        </default-constraints>
+      </item>
+      <item class="javax.swing.JList" icon="/com/intellij/uiDesigner/icons/list.png" removable="false" auto-create-binding="true" can-attach-label="false">
+        <default-constraints vsize-policy="6" hsize-policy="2" anchor="0" fill="3">
+          <preferred-size width="150" height="50" />
+        </default-constraints>
+      </item>
+      <item class="javax.swing.JTree" icon="/com/intellij/uiDesigner/icons/tree.png" removable="false" auto-create-binding="true" can-attach-label="false">
+        <default-constraints vsize-policy="6" hsize-policy="6" anchor="0" fill="3">
+          <preferred-size width="150" height="50" />
+        </default-constraints>
+      </item>
+      <item class="javax.swing.JTabbedPane" icon="/com/intellij/uiDesigner/icons/tabbedPane.png" removable="false" auto-create-binding="true" can-attach-label="false">
+        <default-constraints vsize-policy="3" hsize-policy="3" anchor="0" fill="3">
+          <preferred-size width="200" height="200" />
+        </default-constraints>
+      </item>
+      <item class="javax.swing.JSplitPane" icon="/com/intellij/uiDesigner/icons/splitPane.png" removable="false" auto-create-binding="false" can-attach-label="false">
+        <default-constraints vsize-policy="3" hsize-policy="3" anchor="0" fill="3">
+          <preferred-size width="200" height="200" />
+        </default-constraints>
+      </item>
+      <item class="javax.swing.JSpinner" icon="/com/intellij/uiDesigner/icons/spinner.png" removable="false" auto-create-binding="true" can-attach-label="true">
+        <default-constraints vsize-policy="0" hsize-policy="6" anchor="8" fill="1" />
+      </item>
+      <item class="javax.swing.JSlider" icon="/com/intellij/uiDesigner/icons/slider.png" removable="false" auto-create-binding="true" can-attach-label="false">
+        <default-constraints vsize-policy="0" hsize-policy="6" anchor="8" fill="1" />
+      </item>
+      <item class="javax.swing.JSeparator" icon="/com/intellij/uiDesigner/icons/separator.png" removable="false" auto-create-binding="false" can-attach-label="false">
+        <default-constraints vsize-policy="6" hsize-policy="6" anchor="0" fill="3" />
+      </item>
+      <item class="javax.swing.JProgressBar" icon="/com/intellij/uiDesigner/icons/progressbar.png" removable="false" auto-create-binding="true" can-attach-label="false">
+        <default-constraints vsize-policy="0" hsize-policy="6" anchor="0" fill="1" />
+      </item>
+      <item class="javax.swing.JToolBar" icon="/com/intellij/uiDesigner/icons/toolbar.png" removable="false" auto-create-binding="false" can-attach-label="false">
+        <default-constraints vsize-policy="0" hsize-policy="6" anchor="0" fill="1">
+          <preferred-size width="-1" height="20" />
+        </default-constraints>
+      </item>
+      <item class="javax.swing.JToolBar$Separator" icon="/com/intellij/uiDesigner/icons/toolbarSeparator.png" removable="false" auto-create-binding="false" can-attach-label="false">
+        <default-constraints vsize-policy="0" hsize-policy="0" anchor="0" fill="1" />
+      </item>
+      <item class="javax.swing.JScrollBar" icon="/com/intellij/uiDesigner/icons/scrollbar.png" removable="false" auto-create-binding="true" can-attach-label="false">
+        <default-constraints vsize-policy="6" hsize-policy="0" anchor="0" fill="2" />
+      </item>
+    </group>
+  </component>
+</project>
\ No newline at end of file
Index: pom.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- pom.xml	(date 1601359881236)
+++ pom.xml	(date 1601359881236)
@@ -0,0 +1,40 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<project xmlns="http://maven.apache.org/POM/4.0.0"
+         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
+         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
+    <modelVersion>4.0.0</modelVersion>
+
+    <groupId>org.example</groupId>
+    <artifactId>dns.shop</artifactId>
+    <version>1.0-SNAPSHOT</version>
+
+    <dependencies>
+        <dependency>
+            <groupId>com.codeborne</groupId>
+            <artifactId>selenide</artifactId>
+            <version>5.14.2</version>
+            <scope>test</scope>
+        </dependency>
+        <!-- https://mvnrepository.com/artifact/junit/junit -->
+        <dependency>
+            <groupId>junit</groupId>
+            <artifactId>junit</artifactId>
+            <version>4.12</version>
+            <scope>test</scope>
+        </dependency>
+        <dependency>
+            <groupId>com.codeborne</groupId>
+            <artifactId>selenide</artifactId>
+            <version>5.14.2</version>
+            <scope>compile</scope>
+        </dependency>
+        <dependency>
+            <groupId>org.postgresql</groupId>
+            <artifactId>postgresql</artifactId>
+            <version>42.2.16.jre7</version>
+        </dependency>
+
+    </dependencies>
+
+
+</project>
\ No newline at end of file
Index: src/test/java/com/dns/test/MainTest.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/test/java/com/dns/test/MainTest.java	(date 1601377815400)
+++ src/test/java/com/dns/test/MainTest.java	(date 1601377815400)
@@ -0,0 +1,56 @@
+package com.dns.test;
+
+import com.codeborne.selenide.Configuration;
+import org.junit.Before;
+import org.junit.Test;
+
+import java.io.FileNotFoundException;
+import java.io.PrintWriter;
+import java.io.UnsupportedEncodingException;
+
+import static com.codeborne.selenide.Selenide.*;
+
+public class MainTest {
+    @Before
+    public void SetUp(){
+        Configuration.browser = "chrome";
+        Configuration.startMaximized=true;
+    }
+
+    @Test
+    public void OpenAppliancesPage() throws InterruptedException, FileNotFoundException, UnsupportedEncodingException {
+        open("https://www.dns-shop.ru/");
+        $x("//*[@class='btn btn-additional']").click();
+        $x("//*[text()='Бытовая техника']").click();
+        $x("//span[text()='Товары для кухни']").click();
+        $x("//*[@id='Холодильное оборудование']/..").click();
+        $x("//*[@id='Холодильники']/..").click();
+        $x("//*[@class='ui-radio left-filters-avails__radio-list']").scrollTo();
+        $x("(//*[@class='ui-input-small ui-input-small_list']//input)[2]").setValue("40000");
+        $x("//span[text()='Производитель']").scrollTo();
+        for (int i = 1; i <= 5; i++) {
+            $x("((//*[@class='ui-list-controls__content'])[2]//label[@class='ui-checkbox ui-checkbox_list'])[" + i + "]").click();
+        }
+
+//        List<WebElements> checkboxes = $$x("(//*[@class='ui-list-controls__content'])[2]//span[@class='ui-checkbox__box ui-checkbox__box_list']");
+//        for (int i=1; i <=5; i++){
+//            checkboxes.get(i).click();
+//        }
+
+        $x("//*[text()='Количество камер']").click();
+        $x("//*[@id='catalog-items-page']/div[5]/div[1]/div[3]/div[4]/div[12]/div[1]/div/div/label[2]/span[2]").click();
+        $x("//*[text()='Основной цвет']").click();
+        $x("(//i[@class='ui-list-controls__icon ui-list-controls__icon_down'])[2]").click();
+        $x("(//*[@class='ui-collapse__content ui-collapse__content_list ui-collapse__content_in'])[1]//label[16]").click();
+        Thread.sleep(3000);
+        $x("//button[text()='Применить']").click();
+        Thread.sleep(3000);
+        PrintWriter writer = new PrintWriter("test" + ".txt", "UTF-8");
+        writer.println($$x("//div[@class='n-catalog-product__main']").size());
+        writer.close();
+        Thread.sleep(3000);
+        $x("(//[@class='top-filter__icon'])[1]").click();
+        $x("(//[@class='ui-radio__content'])[9]").click();
+    }
+
+}
Index: src/test/java/com/dns/test/BaseTest.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/test/java/com/dns/test/BaseTest.java	(date 1601455354116)
+++ src/test/java/com/dns/test/BaseTest.java	(date 1601455354116)
@@ -0,0 +1,176 @@
+package com.dns.test;
+
+import java.io.FileNotFoundException;
+import java.io.PrintWriter;
+import java.io.UnsupportedEncodingException;
+import java.sql.*;
+
+import static com.codeborne.selenide.Selenide.$$x;
+import static com.codeborne.selenide.Selenide.$x;
+
+
+public class BaseTest {
+
+    public static void start() throws InterruptedException, FileNotFoundException, UnsupportedEncodingException, SQLException {
+        openPage();
+        setProperties();
+        Thread.sleep(3000);
+        countWriter("file");
+        sortResult();
+        Thread.sleep(3000);
+        firstFiveResultsInDB();
+    }
+
+    public static void openPage() {
+        $x("//*[@class='btn btn-additional']").click();
+        $x("//a[@href='/catalog/17a8e9b716404e77/bytovaya-texnika/']").hover();
+        $x("//a[@href='/catalog/093d2768390b7fd7/xolodilnoe-oborudovanie/']").hover();
+        $x("//a[@href='/catalog/4e2a7cdb390b7fd7/xolodilniki/']").click();
+
+        /*
+        $x("//span[text()='Товары для кухни']").click();
+        $x("//span[text()='Холодильное оборудование']").click();
+        $x("//span[text()='Холодильники']").click();*/
+    }
+
+    public static void setProperties() throws InterruptedException {
+        $x("//*[@class='ui-radio left-filters-avails__radio-list']").scrollTo();                                    //Скролл
+        $x("(//input[@class='ui-input-small__input ui-input-small__input_list'])[2]").scrollTo().setValue("50000"); //Ввод до 40000
+        $x("//span[text()='Производитель']").scrollTo();                                                            //Скролл
+        for (int i = 1; i <= 5; i++) {
+            $x("/html/body/div[1]/div/div[5]/div[1]/div[3]/div[4]/div[5]/div/div/div[2]/label[" + i + "]/span[1]").click();
+        }
+        $x("(//span[text()='Основной цвет'])[1]").click();                                                          //Раскрыть список цветов
+        $x("(//input[@class='ui-input-search__input ui-input-search__input_list'])[2]").setValue("черный");         //Ввод черный
+        //       $x("(//span[text()='Основной цвет'])[1]").scrollTo();
+        //       Thread.sleep(1000);
+        $x("(//div[@class='ui-checkbox-group ui-checkbox-group_list'])[3]/label[17]/span[2]").click();              //Выбор черного цвета
+        $x("//div[@data-id='f[cyg]']/a").click();                                                                   //выпадающий список количества камер
+        $x("(//span[@class='ui-checkbox__box ui-checkbox__box_list'])[88]").click();                                //2
+        Thread.sleep(3000);
+        $x("//button[text()='Применить']").scrollIntoView(false).click();                                                                 //применить
+    }
+
+    public static void countWriter(String filename) throws FileNotFoundException, UnsupportedEncodingException {
+        PrintWriter writer = new PrintWriter(filename + ".txt", "UTF-8");
+        writer.println($$x("//div[@class='n-catalog-product__main']").size());
+        writer.close();
+    }
+
+    public static void sortResult(){
+        $x("(//*[@class='top-filter__icon'])[1]").click();
+        $x("(//*[@class='ui-radio__content'])[9]").click();
+    }
+
+    public static void firstFiveResultsInDB() throws SQLException {
+        int uiid = getMaxUiId();
+        int cycles = 5;
+        int resCount = $$x("//div[@class='n-catalog-product__main']").size();
+
+        if (resCount<cycles){
+            cycles = resCount;
+        }
+
+        for (int i = 1; i <= cycles; i++) {
+
+            String name = $x("(//div[@class='product-info__title-link'])[" + i + "]/a").getText();
+            double score = Double.parseDouble($x("(//div[@class='product-info__rating'])[" + i + "]").getAttribute("data-rating"));
+            String pricestr = $x("(//div[@class='product-min-price__current'])["+ i +"]").getText().replace(" ", "");
+            int price = Integer.parseInt(pricestr.substring(0,pricestr.length()-1));
+
+            try {
+                int id = getMaxId();
+                insertInfoInDB(id, uiid, name, price, score);
+            } catch (NumberFormatException e) {
+                insertInfoInDB(1, 1, name, price, score);
+            }
+
+
+        }
+    }
+
+    public static Connection connectToDB() throws SQLException {
+        final String user = "postgres";
+        final String password = "1234";
+        final String url = "jdbc:postgresql://localhost:5432/dns_test";
+
+        final Connection connection = DriverManager.getConnection(url, user, password);
+
+        return  connection;
+    }
+
+    public static int getMaxUiId() throws SQLException {
+
+        final Connection connection = connectToDB();
+
+        try (PreparedStatement statement = connection.prepareStatement("SELECT MAX(uuid) FROM dns_shop")) {
+
+
+
+            final ResultSet resultSet = statement.executeQuery();
+
+            if (resultSet.next()) {
+                try {
+                    return Integer.parseInt(resultSet.getString(1))+1;
+                } catch (NumberFormatException e) {
+                    return 0;
+                }
+            }
+            else return 0;
+
+        } finally {
+            connection.close();
+        }
+    }
+
+    public static int getMaxId() throws SQLException {
+
+        final Connection connection = connectToDB();
+
+        try (PreparedStatement statement = connection.prepareStatement("SELECT MAX(id) FROM dns_shop")) {
+
+            final ResultSet resultSet = statement.executeQuery();
+
+            if (resultSet.next()) {
+                try {
+                    return Integer.parseInt(resultSet.getString(1))+1;
+                } catch (NumberFormatException e) {
+                    return 0;
+                }
+            }
+            else return 0;
+
+        } finally {
+            connection.close();
+        }
+    }
+
+    public static void insertInfoInDB(int id, int uiid, String name, int price, double score) throws SQLException {
+
+        final Connection conn = connectToDB();
+
+        // Employees (id, full_name, gender, hire_date)
+        // ID: Auto Increase
+        String sql = "Insert into dns_shop " //
+                + " (uuid, name, price, rating, id) " //
+                + " values " //
+                + " (?, ?, ?, ?, ?)";
+
+        // Создать объект PreparedStatement.
+        PreparedStatement pstm = conn.prepareStatement(sql, Statement.RETURN_GENERATED_KEYS);
+
+//        pstm.setInt(1, 2);
+        pstm.setInt(1, uiid);
+        pstm.setString(2, name);
+        pstm.setInt(3, price);
+        pstm.setDouble(4,score);
+        pstm.setDouble(5,id);
+
+        // Execute!
+        pstm.execute();
+
+    }
+
+
+}
+
Index: src/test/java/com/dns/test/FindTest.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/test/java/com/dns/test/FindTest.java	(date 1601455354136)
+++ src/test/java/com/dns/test/FindTest.java	(date 1601455354136)
@@ -0,0 +1,38 @@
+package com.dns.test;
+
+import java.sql.Connection;
+import java.sql.PreparedStatement;
+import java.sql.ResultSet;
+import java.sql.SQLException;
+
+import static com.codeborne.selenide.Condition.text;
+import static com.codeborne.selenide.Selenide.$x;
+import static com.dns.test.BaseTest.connectToDB;
+
+public class FindTest {
+
+
+    public static void searchTheBest() throws SQLException {
+        final Connection connection = connectToDB();
+        String search = null;
+        Double rating = null;
+        try (PreparedStatement statement = connection.prepareStatement("SELECT DISTINCT name, rating FROM dns_shop WHERE rating = (SELECT MAX(rating) FROM dns_shop) \n" +
+                "AND price = (SELECT MIN(price) FROM dns_shop \n" +
+                "WHERE rating = (SELECT MAX(rating) FROM dns_shop)) ")) {
+
+            ResultSet resultSet = statement.executeQuery();
+
+            if (resultSet.next()) {
+                search = resultSet.getString(1);
+                rating = resultSet.getDouble(2);
+            }
+
+
+        } finally {
+            connection.close();
+        }
+        $x("(//input[@name='q'])[2]").setValue(search).pressEnter();
+        $x("//span[@itemprop='ratingValue']").shouldHave(text(String.valueOf(rating)));
+    }
+
+}
Index: src/test/java/com/dns/test/DnsTest.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/test/java/com/dns/test/DnsTest.java	(date 1601394545994)
+++ src/test/java/com/dns/test/DnsTest.java	(date 1601394545994)
@@ -0,0 +1,35 @@
+package com.dns.test;
+
+import com.codeborne.selenide.Configuration;
+import org.junit.Before;
+import org.junit.Test;
+
+import java.sql.SQLException;
+
+import static com.codeborne.selenide.Selenide.open;
+import static com.dns.test.BaseTest.start;
+import static com.dns.test.FindTest.searchTheBest;
+
+public class DnsTest {
+
+    @Before
+    public void setUp() {
+        Configuration.startMaximized=true;
+        open("https://www.dns-shop.ru/");
+    }
+
+    @Test
+    public void dnsTest(){
+        try {
+            start();
+        } catch (Exception e) {
+            e.printStackTrace();
+
+        }
+    }
+
+    @Test
+    public void bestProduct() throws SQLException {
+        searchTheBest();
+    }
+}
Index: file.txt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- file.txt	(date 1601394520152)
+++ file.txt	(date 1601394520152)
@@ -0,0 +1,1 @@
+3
Index: db/db.sql
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- db/db.sql	(date 1601385549329)
+++ db/db.sql	(date 1601385549329)
@@ -0,0 +1,9 @@
+CREATE DATABASE dns_test ENCODING 'UTF-8';
+
+CREATE TABLE IF NOT EXISTS dns_shop (
+  id       SERIAL PRIMARY KEY,
+  UUID    INTEGER NOT NULL,
+  name VARCHAR(128) NOT NULL,
+  price     NUMERIC(5,2)     NOT NULL,
+  rating     NUMERIC(5,2)     NOT NULL
+);
\ No newline at end of file
Index: dns-shop.iml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- dns-shop.iml	(date 1601290582753)
+++ dns-shop.iml	(date 1601290582753)
@@ -0,0 +1,2 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<module type="JAVA_MODULE" version="4" />
\ No newline at end of file
Index: test.txt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- test.txt	(date 1601377529101)
+++ test.txt	(date 1601377529101)
@@ -0,0 +1,1 @@
+18
Index: .idea/dns-shop.iml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- .idea/dns-shop.iml	(date 1601453759803)
+++ .idea/dns-shop.iml	(date 1601453759803)
@@ -0,0 +1,2 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<module type="JAVA_MODULE" version="4" />
\ No newline at end of file
